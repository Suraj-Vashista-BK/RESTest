---
auth:
  required: true
  queryParams: {}
  headerParams: {}
  apiKeysPath: null
  headersPath: null
  oauthPath: null
testConfiguration:
  operations:
  - testPath: "/customers/{customerId}/address"
    operationId: changeAddress
    method: put
    testParameters:
    - name: customerId
      in: path
      weight: 1
      generators:
      - type: RandomEnglishWord
        genParameters:
        - name: maxWords
          values:
          - 1
          objectValues: null
        valid: true
    - name: body
      in: body
      weight: null
      generators:
      - type: BodyGenerator
        genParameters: []
        valid: true
    expectedResponse: 200
  - testPath: /insurance-quote-requests
    operationId: getInsuranceQuoteRequests
    method: get
    testParameters: null
    expectedResponse: 200
  - testPath: /insurance-quote-requests
    operationId: createInsuranceQuoteRequest
    method: post
    testParameters:
    - name: body
      in: body
      weight: null
      generators:
      - type: BodyGenerator
        genParameters: []
        valid: true
    expectedResponse: 200
  - testPath: /customers
    operationId: registerCustomer
    method: post
    testParameters:
    - name: body
      in: body
      weight: null
      generators:
      - type: BodyGenerator
        genParameters: []
        valid: true
    expectedResponse: 200
  - testPath: /auth
    operationId: authenticationRequest
    method: post
    testParameters:
    - name: body
      in: body
      weight: null
      generators:
      - type: BodyGenerator
        genParameters: []
        valid: true
    expectedResponse: 200
  - testPath: /auth/signup
    operationId: signupUser
    method: post
    testParameters:
    - name: body
      in: body
      weight: null
      generators:
      - type: BodyGenerator
        genParameters: []
        valid: true
    expectedResponse: 200
  - testPath: "/insurance-quote-requests/{id}"
    operationId: respondToInsuranceQuote
    method: patch
    testParameters:
    - name: id
      in: path
      weight: null
      generators:
      - type: RandomNumber
        genParameters:
        - name: type
          values:
          - int64
          objectValues: null
        - name: min
          values:
          - 1
          objectValues: null
        - name: max
          values:
          - 100
          objectValues: null
        valid: true
    - name: body
      in: body
      weight: null
      generators:
      - type: BodyGenerator
        genParameters: []
        valid: true
    expectedResponse: 200
  - testPath: /user
    operationId: getCurrentUser
    method: get
    testParameters: null
    expectedResponse: 200
  - testPath: "/insurance-quote-requests/{insuranceQuoteRequestId}"
    operationId: getInsuranceQuoteRequest
    method: get
    testParameters:
    - name: insuranceQuoteRequestId
      in: path
      weight: null
      generators:
      - type: RandomNumber
        genParameters:
        - name: type
          values:
          - int64
          objectValues: null
        - name: min
          values:
          - 1
          objectValues: null
        - name: max
          values:
          - 100
          objectValues: null
        valid: true
    expectedResponse: 200
  - testPath: "/customers/{customerId}"
    operationId: getCustomer
    method: get
    testParameters:
    - name: customerId
      in: path
      weight: 1
      generators:
      - type: RandomEnglishWord
        genParameters:
        - name: maxWords
          values:
          - 1
          objectValues: null
        valid: true
    expectedResponse: 200
  - testPath: "/customers/{customerId}/insurance-quote-requests"
    operationId: getInsuranceQuoteRequests_1
    method: get
    testParameters:
    - name: customerId
      in: path
      weight: 1
      generators:
      - type: RandomEnglishWord
        genParameters:
        - name: maxWords
          values:
          - 1
          objectValues: null
        valid: true
    expectedResponse: 200
  - testPath: "/cities/{postalCode}"
    operationId: getCitiesForPostalCode
    method: get
    testParameters:
    - name: postalCode
      in: path
      weight: null
      generators:
      - type: RandomEnglishWord
        genParameters:
        - name: maxWords
          values:
          - 1
          objectValues: null
        valid: true
    expectedResponse: 200
  - testPath: /error
    operationId: handleError_2
    method: get
    testParameters: null
    expectedResponse: 200
  - testPath: /error
    operationId: handleError_6
    method: put
    testParameters: null
    expectedResponse: 200
  - testPath: /error
    operationId: handleError_1
    method: post
    testParameters: null
    expectedResponse: 200
  - testPath: /error
    operationId: handleError_3
    method: delete
    testParameters: null
    expectedResponse: 200
  - testPath: /error
    operationId: handleError_4
    method: patch
    testParameters: null
    expectedResponse: 200
